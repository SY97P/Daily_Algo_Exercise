⚛️ 백준

    🪄 투포인터

	* 배열 합치기
		- a 배열 포인터 i, b배열 포인터 j (a, b는 정렬된 상태)
		- a[i] < b[j] 이면 result에 a[i] 추가, i += 1
		- a[i] >= b[j] 이면 result에 b[j] 추가, j += 1

	* 블로그
		- 누적합

	* 겹치는건 싫어
		- 투포인터
		- 초기값 i = j = 0
		- count[a[j]] < k -> count[a[j]] += 1, j += 1
		- count[a[j]] >= k -> i += 1, count[a[i]] -= 1

	* 두 용액
		- 정렬
		- a[i] + a[j] == 0 -> 바로 출력
		- a[i] + a[j] < 0 -> i 증가
		- a[i] + a[j] > 0 -> j 감소

	* 가장 긴 짝수 연속한 부분 수열 (large)
		- 

	* 회전초밥
		- 슬라이딩 윈도우
		- 0 <= i < n -> j = i + k
		- count[d+1] 리스트
		- count[a[i]] -= 1, count[a[j]] += 1
		- count[c] == 0 -> 1
		- count[x] != 0 인 개수세기 -> result 갱신

	* 부분합
		- 누적합 asum[n+1]
		- i, j = 0, 1
		- sum[j] - sum[i] < s -> j 증가
		- sum[j] - sum[i] > s -> i 증가
		- sum[j] = sum[i] = s -> result 갱신

	* 합이 0
		- 세 포인터 = 고정점 + 투포인터(정렬)
		- 반례: a[l] == a[r] 일 때 / a[r] == a[r-1] 일 때

	* 세 용액
		- 정렬
		- 0 <= i < n -> l=i+1 , r=n-1
		- a[i] + a[l] + a[r] <= 0 -> l += 1
		- a[i] + a[l] + a[r] >  0 -> r -= 1

	* 팀 빌딩
		- 두포인터가 가리키는 수열값이 각자 최대가 되도록 포인터 이동

	* 합이 0이 되는 네 정수
		- 네 개의 배열을 두 개씩 묶어서 투포인터로 변형

	* ㅋㅋ루ㅋㅋ
		- R 사이에 있는 K는 무시하고, R개수만 세기
		- R을 사이에 두고 있는 K는 좌측, 우측 개수 중에 작은 것 * 2 해서 개수 세기 