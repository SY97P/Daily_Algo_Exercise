⚛️ 백준

    🪄 구현

	* 상어초등학교
		- 첫 번째 학생이 무조건 정중앙에 오는게 아니라고 함.

	* 달팽이
	 	- 상우하좌 순으로 회전하는 달팽이 쉨
		- 만들어진 달팽이 행렬에서 입력으로 주어지는 숫자의 좌표도 출력

	* 오리
		- count <= len(word) 반복
		- curr 다음 문자열인 인덱스에서 duck 값이 0이면 duck[i] = count, count += 1
		- word 끝까지 도달했을때 count % 5 == 0이면 result 증가, 아니면 -1 리턴
		- 86%에서 시간초과 -> quackau 같이 q로 시작하지 않으면서 count가 5배수로 무한반복 가능

	* 파일 정리
		- 트라이 자료구조 -> 시간초과
		- defaultdict -> 통과

	* 단어 뒤집기 2
		- 태그일 때 변수 ("<" 나오고 ">" 나올때까지 true)
		- 태그일 때는 그냥 출력 (큐)
		- 단어일 때는 스택에 추가
		- 단어일 때 공백이면 스택 토하고 공백 출력

	* 원상 복구 (small)
		- p[d[i]] = s[i] 를 k 번 반복

	* 배열 돌리기
		- 4개 줄 temping -> d // 45 만큼 반복하면서 이동
		- 4개 줄끼리만 계속 변경해주다가 반복 끝나면 원본 배열 갱신

	* 기차가 어둠을 헤치고 은하수를
		- 비트마스크
		- 1 i x : 승차 -> train |= 1 << (x-1)
		- 2 i x : 하차 -> train &= ~ (1 << x - 1)
		- 3 i : 뒤로 한칸 -> train = (train & ~(1<<19)) << 1
		- 4 i : 앞으로 한칸 -> train = (train & ~ (1 << 0)) >> 1

	* 오목
		- 브루트포스
		- 좌상단 -> 우하단 순회므로, (오른쪽, 아래쪽, 대각위, 대각아래) 네 방향으로만 체크하면 된다. 
		- 육목 체크
			1. 진행방향으로 연속된 개수가 6개 이상인지
			2. 진행반대방향으로 연속된 개수가 6개 이상인지