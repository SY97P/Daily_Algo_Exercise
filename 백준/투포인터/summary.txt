⚛️백준

	투포인터

	* 두 수의 합
		- 주어진 수열을 정렬해야 투 포인터로 풀 수 있다. 

	* 부분합
		- 두 개의 포인터 사이의 부분합을 구할 때 반복문을 사용하면 안 된다. 부분합을 구하는데만 O(n)의 시간복잡도가 걸리기 때문 
		- 따라서 DP 누적합을 이용해서 부분합 구하는 시간복잡도를 O(1)로 잘라내야 함.

	* 소수의 연속합
		- 에레토스테네스의 체 + DP + 투포인터
		- 일단 n 이하의 모든 소수를 구해야 함. (에라토스테네스의 체)
		- DP로 누적합을 구해서 부분합을 O(1) 내로 구할 수 있도록 한다. 

	* 냅색문제
		- Meet in the Middle (중간에서 만나기) 알고리즘 필요
		- Brute Force로 완전탐색하기 부담스러운 문제에서 주로 사용
		- 기본적인 구조는 Divide and Conquer 처럼 분할, 연산, 합치기
		- 차이점은 문제를 atomic한 문제까지 분할하는 것이 아니라, 원본 문제를 서너개의 작은 문제로 나눈다. 
		- 분할된 물건 무게 배열에서 조합 + sum 함수를 이용해 가능한 모든 무게 합 가능성을 구하고
		- 두 개의 부분집합을 이분탐색으로 조합해서 개수를 구함.