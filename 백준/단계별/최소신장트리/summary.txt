⚛️ 백준

	🪄 최소 신장 트리

	* 상근이의 여행
	    - ST (스패닝 트리)
	    - 모든 정점이 연결된 사이클 없는 트리
	    - Prim, Kruskal 알고리즘 모두 사용

	    * Prim 알고리즘 (배열 : O(EV) / 힙 : O(E log V))
	        1. 임의의 점 하나를 MST에 추가
	        2. MST에 포함된 원소와 아닌 원소 간 간선 중에서 최소 간선을 선택해 MST에 추가
	        3. 모든 정점이 MST에 포함되도록 반복

        * Kruskal 알고리즘 (배열 : O(EV) / 힙 : O(E log V))
            1. 모든 간선을 오름차순으로 정렬
            2. MST 내부 원소끼리 사이클이 발생하지 않는 최소 간선을 선택해 추가
                -> 사이클 여부 판단 : 유니온-파인드
            3. 모든 정점이 MST에 포함되도록 반복

    * 최소 스패닝 트리
        - MST (최소신장트리)
        - 간선 합이 최소인 모든 정점이 연결된 사이클 없는 트리
        - Prim, Kruskal 알고리즘 모두 사용
        - Python3, Java11 제출

    * 별자리 만들기
        - 입력으로 좌표가 주어짐
        - 좌표와 해당 좌표정점의 인덱스를 이용해서 간선을 만들어 해결

    * 우주신과의 교감
        - 이미 지나간 간선에 대한 입력이 들어오므로 크루스칼 알고리즘이 유리
        - 시간초과 해결
            - 입력 시 이미 지나간 간선에 대한 검사 수행 X
            - 유니온-파인드로 이미 지나간 간선에 대해서 mst를 갱신한 뒤에 나머지 연산 수행

    * 전력난
        - (u, v, c) 쌍으로 주어졌으므로, 입력 포맷을 그대로 이용할 수 있는 크루스칼 알고리즘 사용
        - EOF 문자가 주어진 무한입력이므로 입출력 영역을 신경써야 함.

    * 다리 만들기2