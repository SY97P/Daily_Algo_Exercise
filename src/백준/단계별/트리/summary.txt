⚛️ 백준

    🪄 트리

    * 트리의 부모 찾기
        - 루트 노드 번호가 1인 그래프에서 각 정점의 부모 노드 번호를 출력하는 문제
        - 인접리스트, dfs, bitmask 이용해서 쉽게 답을 구했다.
        - 인접리스트 input data가 방대해서 sys.stdin.readline 입출력 함수 사용

    * 트리의 지름
        - 트리의 지름을 구하는 증명된 공식이 있음.
            1. 임의의 점에서 가장 먼 정점을 구함.
            2. 구한 정점에서 다시 한 번 더 가장 먼 정점을 구함.
            3. 1번에서 구한 정점과 2번에서 구한 정점 사이의 거리가 트리의 지름.
        - 죽었다 깨나도 이해 못할 것 같아서 그냥 외웠음.

    * 트리순회
        - 순회 (Traversal)
            - 그래프가 주어졌을때 순회 순서를 어떻게 조절할 것인지
            - DFS 자유롭게 다룰 수 있느냐 물어보는 문제
        - 전위순회 (Preorder Traversal)
            - TLR (루트, 왼, 오)
            - DFS 진입 시 현재 노드 출력
        - 중위순회 (Inorder Traversal)
            - LTR (왼, 루트, 오)
            - 왼쪽 child 방문 후 현재 노드 출력
        - 후위순회 (Postorder Traversal)
            - LRT (왼, 오, 루트)
            - 오른쪽 child 방문 후 현재 노드 출력

    * 트리의 순회
        - inorder, postorder가 주어졌을 때 preorder 결과를 출력
        - postorder 제일 마지막 원소가 root임을 이용하여 문제 풀이
        - 재귀 + 분할정복으로 문제 풀이
        - 재귀함수 파라미터는 index로 접근해야 시간초과, 메모리초과 방어 가능

    * 이진 검색 트리
        - 이진트리가 inorder로 주어졌을때 postorder로 결과 출력
        - inorder 맨 첫 노드가 루트임을 이용해서 풀이
        - 루트보다 작은 정점의 개수와 큰 정점의 개수를 구해서 분할정복
        - 입력데이터 범위가 정해지지 않은 문제
            -> try-except 문으로 입출력 제어

    * 트리
        - 그래프가 주어졌을때 부분 그래프가 형성하는 트리의 개수 맞추는 문제
            1. 정점 하나만 있어도 트리
            2. 사이클이 있으면 트리 x
        - DFS + Bitmask 사용
            -> Bitmask를 DFS 파라미터로 넘기면 연산 도중에 Bitmask 처리한 결과가 global 단에서는 적용되지 않음.
        - Cycle 판별법
            - 현재 정점에서 갈 수 있는 정점 중에서 이미 방문해서 진행할 수 없는 노드가 있을 때 그 노드가 한 턴 전에 지나왔던 정점이 아닐 경우
            - 고것은 사이클이다.
